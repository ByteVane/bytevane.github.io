<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>电信光猫天翼网关4.0获取超级密码教程</title>
      <link href="/posts/c8d3cd92.html"/>
      <url>/posts/c8d3cd92.html</url>
      
        <content type="html"><![CDATA[<p>电信光猫天翼网关的超级账号是telecomadmin，超级密码是随机的，以telecomadmin开头，后面有8位随机数字，有的光猫只要断电或者重启超级密码就会改变，本教程仅适用于电信光猫天翼网关4.0 中兴光猫版，本人测试的光猫型号中兴F610GV9、F7010C。其他版本型号光猫请勿测试。破解工具下载：<a href="https://www.aliyundrive.com/s/NvSFPydr3PC">传送门</a></p><h4 id="第一步：拔掉光猫光纤，恢复出厂设置，然后进行破解"><a href="#第一步：拔掉光猫光纤，恢复出厂设置，然后进行破解" class="headerlink" title="第一步：拔掉光猫光纤，恢复出厂设置，然后进行破解"></a>第一步：拔掉光猫光纤，恢复出厂设置，然后进行破解</h4><p>下载破解工具到电脑桌面解压</p><h5 id="获取临时的telnet账号和密码"><a href="#获取临时的telnet账号和密码" class="headerlink" title="获取临时的telnet账号和密码"></a>获取临时的telnet账号和密码</h5><p>打开CMD输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Users\codepiee\Desktop\光猫天翼4.0工具</span><br></pre></td></tr></table></figure><p>注：C:\Users\codepiee\Desktop\光猫天翼4.0工具，代表破解工具文件夹的路径，根据自己的文件夹位置修改</p><p>然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">factorymode_crack.exe -l xxx open -i 192.168.1.1 -p 8080</span><br></pre></td></tr></table></figure><p>注：有的光猫使用的是8080端口，IP地址默认是192.168.1.1</p><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">factorymode_crack.exe -l xxx open -i 192.168.1.1</span><br></pre></td></tr></table></figure><p>如果打开成功会出现：</p><p>Enter192.168.1.1</p><p>FactoryModeSuccess:FactoryModeAuth.gch?user=l0Fo18jP&amp;pass=7N518I28</p><p>user=的值是telnet的用户名，&amp;pass=后面的是telnet的密码</p><p>这样我们就开启了telnet并且获得了临时的telnet账号和密码</p><h5 id="获取永久-Telnet-账号和密码"><a href="#获取永久-Telnet-账号和密码" class="headerlink" title="获取永久 Telnet 账号和密码"></a>获取永久 Telnet 账号和密码</h5><p>1、打开控制面板，在 程序的 启用或关闭 Windows 功能 中勾选 Telnet Client</p><p>2、运行 tftpd64.exe，在 Server Interfaces 里选择自己的电脑 IP，假设是 192.168.1.2</p><p>3、打开另一个cmd窗口输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.1.1</span><br><span class="line">#在 Login：后面输入上面的临时账号，Password：后输入密码（密码不会显示出来，不要以为是自己键盘坏了）</span><br><span class="line"></span><br><span class="line">tftp -p -l userconfig&#x2F;cfg&#x2F;db_user_cfg.xml -r db_user_cfg.xml 192.168.1.2</span><br></pre></td></tr></table></figure><p>这样在破解工具文件夹下会得到一个光猫的db_user_cfg.xml配置文件但是这个配置是加密的，我们需要解密才能用，此Telnet窗口不要关闭接下来还需要用到</p><p>回到第一个打开的cmd窗口确保在破解工具文件夹下输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\ztecfg.exe -d AESCBC -i .\db_user_cfg.xml -o break.cfg</span><br></pre></td></tr></table></figure><p>完成后在破解工具文件下得到一个break.cfg文件，使用记事本或者其他软件打开 break.cfg 文件，搜索关键字 TS_UPwd，看到 ZTEGC1234567 这样的就是 Telnet 永久密码，账号是 user</p><h5 id="永久打开光猫-Telnet-端口"><a href="#永久打开光猫-Telnet-端口" class="headerlink" title="永久打开光猫 Telnet 端口"></a>永久打开光猫 Telnet 端口</h5><p>获取到永久 Telnet 账号和密码之后，不要关闭窗口，继续输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sendcmd 1 DB set TelnetCfg 0 Lan_Enable 1</span><br><span class="line">sendcmd 1 DB set TelnetCfg 0 InitSecLvl 3</span><br><span class="line">sendcmd 1 DB set TelnetCfg 0 Max_Con_Num 5</span><br><span class="line">sendcmd 1 DB save</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>命令一行一个输入进去，然后光猫会重启。重启完成后插上光纤，光猫会自动注册，就能上网了。</p><h5 id="获取超级管理员密码"><a href="#获取超级管理员密码" class="headerlink" title="获取超级管理员密码"></a>获取超级管理员密码</h5><p>使用永久 Telnet 账号和密码进入 Telnet 模式，重新获取配置文件 db_user_cfg.xml然后解密得到break.cfg文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Telnet 192.168.1.1</span><br><span class="line"></span><br><span class="line">tftp -p -l userconfig&#x2F;cfg&#x2F;db_user_cfg.xml -r db_user_cfg.xml 192.168.1.2</span><br><span class="line"></span><br><span class="line">.\ztecfg.exe -d AESCBC -i .\db_user_cfg.xml -o break.cfg</span><br></pre></td></tr></table></figure><p>在 break.cfg 中搜索 telecomadmin ，看到 telecomadmin12345678 就是超级管理员密码了，用户名都是 telecomadmin 。</p><p>至此，光猫又掌握在你手中了，愉快的玩耍吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 光猫超级密码 </tag>
            
            <tag> F610gv9 </tag>
            
            <tag> F7010c </tag>
            
            <tag> 天翼光猫4.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手动搭建Xray+宝塔面板，让你的VPS发挥最大的用途</title>
      <link href="/posts/be5a392e.html"/>
      <url>/posts/be5a392e.html</url>
      
        <content type="html"><![CDATA[<p>小白几分钟搞定Xray 手动搭建和宝塔面板共存最优的、最简单的配置方法。</p><h3 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h3><p>1、VPS 一台，重置好主流的操作系统</p><p>2、域名一个，解析到该VPS。</p><h3 id="开始搭建Xray-宝塔"><a href="#开始搭建Xray-宝塔" class="headerlink" title="开始搭建Xray+宝塔"></a>开始搭建Xray+宝塔</h3><h4 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h4><p>centos更新系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><p>Debian或ubuntu更新系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update -y</span><br></pre></td></tr></table></figure><h4 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h4><p>（PS:推荐大家使用 CentOS 系统安装宝塔面板，其他系统也可以，相关安装命令请访问 <a href="https://www.bt.cn/">宝塔官网</a>。国内版的宝塔面板需要绑定手机号，不想绑定手机号的，可以用宝塔国际版功能是一样的，安装命令请访问<a href="https://forum.aapanel.com/d/9-aapanel-linux-panel-6812-installation-tutorial">宝塔国际官网</a>）</p><p>国内安装脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>国际安装脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http:&#x2F;&#x2F;www.aapanel.com&#x2F;script&#x2F;install_6.0_en.sh &amp;&amp; bash install.sh forum</span><br></pre></td></tr></table></figure><p>宝塔安装完毕以后，根据自己的需求安装所需的环境插件</p><p>根据自己的需求部署网站，部署完成以后，请自行的完成网站相关的设置</p><h4 id="安装官方-Xray-服务"><a href="#安装官方-Xray-服务" class="headerlink" title="安装官方 Xray 服务"></a>安装官方 Xray 服务</h4><p>以下一键安装程序来源于官方：<a href="https://github.com/XTLS/Xray-install">传送门</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &quot;$(curl -L https:&#x2F;&#x2F;github.com&#x2F;XTLS&#x2F;Xray-install&#x2F;raw&#x2F;main&#x2F;install-release.sh)&quot; @ install -u root</span><br></pre></td></tr></table></figure><p>UUID 随机生成代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;uuid # 粘贴到VPS运行即可生成 UUID</span><br></pre></td></tr></table></figure><p>安装完毕以后，在目录 /usr/local/etc/xray 找到 config,json 文件，贴入下面的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;log&quot;: &#123;</span><br><span class="line">        &quot;loglevel&quot;: &quot;warning&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;inbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;listen&quot;: &quot;0.0.0.0&quot;, </span><br><span class="line">            &quot;port&quot;: 443, </span><br><span class="line">            &quot;protocol&quot;: &quot;vless&quot;, </span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;clients&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;id&quot;: &quot;5272bc0d-9852-4af7-b2f0-979b1faf2973&quot;, &#x2F;&#x2F;此处改为你的UUID</span><br><span class="line">                        &quot;level&quot;: 0, </span><br><span class="line">                        &quot;email&quot;: &quot;admin@codepiee.com&quot;,  &#x2F;&#x2F;此处为邮箱地址，随便修改</span><br><span class="line">                        &quot;flow&quot;:&quot;xtls-rprx-direct&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ], </span><br><span class="line">                &quot;decryption&quot;: &quot;none&quot;, </span><br><span class="line">                &quot;fallbacks&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;alpn&quot;: &quot;h2&quot;, </span><br><span class="line">                        &quot;dest&quot;: 8002   &#x2F;&#x2F;此处为回落端口，若更改，请更改后面Nginx的相应配置</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;, </span><br><span class="line">            &quot;streamSettings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;tcp&quot;, </span><br><span class="line">                &quot;security&quot;: &quot;xtls&quot;, </span><br><span class="line">                &quot;xtlsSettings&quot;: &#123;</span><br><span class="line">                    &quot;serverName&quot;: &quot;example.com&quot;,  &#x2F;&#x2F;修改为你的域名</span><br><span class="line">                    &quot;alpn&quot;: [</span><br><span class="line">                        &quot;h2&quot;, </span><br><span class="line">                        &quot;http&#x2F;1.1&quot;</span><br><span class="line">                    ], </span><br><span class="line">                    &quot;certificates&quot;: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;certificateFile&quot;: &quot;&#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;cert&#x2F;example.com&#x2F;fullchain.pem&quot;, &#x2F;&#x2F;example.com修改为你的域名</span><br><span class="line">                            &quot;keyFile&quot;: &quot;&#x2F;www&#x2F;server&#x2F;panel&#x2F;vhost&#x2F;cert&#x2F;example.com&#x2F;privkey.pem&quot; &#x2F;&#x2F;example.com修改为你的域名</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ], </span><br><span class="line">    &quot;outbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;protocol&quot;: &quot;freedom&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="为域名申请证书"><a href="#为域名申请证书" class="headerlink" title="为域名申请证书"></a>为域名申请证书</h4><p>在宝塔面板里找到网站站点设置界面，点击SSL为网站域名申请证书（ PS：不要开启 强制HTTPS ）</p><h4 id="设置网站配置文件"><a href="#设置网站配置文件" class="headerlink" title="设置网站配置文件"></a>设置网站配置文件</h4><p>找到网站站点设置界面，点击配置文件</p><p>首先在代码第一行插入如下代码（强制开启 HTTPS 访问）<br>（记得修改两处域名为你自己的域名）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       0.0.0.0:80;</span><br><span class="line">    server_name  example.com; &#x2F;&#x2F;example.com修改为你的域名</span><br><span class="line">    return 301 https:&#x2F;&#x2F;example.com$request_uri; &#x2F;&#x2F;example.com修改为你的域名</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其次删除 listen 80; 这行，并修改 443 端口为 8002 （为xray配置文件里设置的端口），去除 ssl 字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen 8002 http2;</span><br></pre></td></tr></table></figure><h4 id="测试-Xray-配置文件"><a href="#测试-Xray-配置文件" class="headerlink" title="测试 Xray 配置文件"></a>测试 Xray 配置文件</h4><p>分别输入下面命令，查看 Xray 是否正常运行，若是有问题，就是配置文件出错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart xray</span><br><span class="line">systemctl status xray</span><br></pre></td></tr></table></figure><p>显示active（running），代表 Xray 正常工作中</p><p>至此宝塔面板及 Xray 搭建完毕</p>]]></content>
      
      
      
        <tags>
            
            <tag> xray </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bitwarden密码管理器搭建教程二：官方版docker部署教程</title>
      <link href="/posts/80001ee3.html"/>
      <url>/posts/80001ee3.html</url>
      
        <content type="html"><![CDATA[<p>bitwarden 作为一款开源的密码集中管理工具，其便捷性不用多说，支持多端同步使用，浏览器插件支持，密码导出备份，加密笔记，保存你的信用卡等私密信息。而最重要的是，Bitwarden 支持本地托管，可以<strong>搭建私人专属密码库</strong>，部署到自己的服务器、 NAS、树莓派等设备上去，所有的密码数据、通讯都不会经过第三方，更能让人放心。</p><p>官方网站：<a href="https://bitwarden.com/">Bitwarden</a></p><p>官方项目：<a href="https://github.com/bitwarden/server">bitwarden / server</a></p><h2 id="一、自建Bitwarden服务前准备"><a href="#一、自建Bitwarden服务前准备" class="headerlink" title="一、自建Bitwarden服务前准备"></a>一、自建Bitwarden服务前准备</h2><p>1、自己的一台云服务器或者家里有NAS：安装好主流的linux操作系统</p><p>2、准备一个域名解析到服务器</p><h2 id="二、debian部署Bitwarden"><a href="#二、debian部署Bitwarden" class="headerlink" title="二、debian部署Bitwarden"></a>二、debian部署Bitwarden</h2><p>更换到root权限更新系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su -</span><br><span class="line">apt-get update -y</span><br></pre></td></tr></table></figure><p>卸载旧版本</p><p>旧版本的 Docker 被称为<code>docker</code>,<code>docker.io</code>或<code>docker-engine</code>. 如果安装了这些，请卸载它们：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure><h3 id="安装-Docker-和-Docker-Compose"><a href="#安装-Docker-和-Docker-Compose" class="headerlink" title="安装 Docker 和 Docker Compose"></a>安装 Docker 和 Docker Compose</h3><ul><li><a href="https://docs.docker.com/engine/installation/">官方安装 Docker Engine教程</a></li><li><a href="https://docs.docker.com/compose/install/">官方安装 Docker Compose教程</a></li></ul><p>Bitwarden 提供了一个免费版本，您可以使用 Docker 安装它，默认情况下，Debian 11 默认存储库中不包含最新版本的 Docker，因此，您需要从 Docker 的官方存储库安装它。</p><p>首先，使用以下命令安装所有必需的依赖项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg \</span><br><span class="line">    lsb-release</span><br></pre></td></tr></table></figure><p>添加 Docker 的官方 GPG 密钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;debian&#x2F;gpg | gpg --dearmor -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure><p>使用以下命令设置稳定存储库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo \</span><br><span class="line">  &quot;deb [arch&#x3D;$(dpkg --print-architecture) signed-by&#x3D;&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;debian \</span><br><span class="line">  $(lsb_release -cs) stable&quot; | tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;null</span><br></pre></td></tr></table></figure><h3 id="安装Docker-Engine"><a href="#安装Docker-Engine" class="headerlink" title="安装Docker Engine"></a>安装Docker Engine</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y</span><br><span class="line">apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>安装完成后，您可以使用以下命令验证 Docker CE 版本：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></table></figure><p>您还可以使用以下命令检查 Docker 的状态：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><p>在 Debian 和 Ubuntu 上，Docker 服务默认配置为在启动时启动。要为其他发行版在启动时自动启动 Docker 和 Containerd，请使用以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker.service</span><br><span class="line">systemctl enable containerd.service</span><br></pre></td></tr></table></figure><h3 id="安装-Docker-Compose"><a href="#安装-Docker-Compose" class="headerlink" title="安装 Docker Compose"></a>安装 Docker Compose</h3><p>1、运行以下命令以下载 Docker Compose 的当前稳定版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -SL https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;v2.2.3&#x2F;docker-compose-linux-x86_64 -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure><p>2、为 Docker Compose 二进制文件设置执行权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br></pre></td></tr></table></figure><p>3、测试是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="安装-Bitwarden"><a href="#安装-Bitwarden" class="headerlink" title="安装 Bitwarden"></a>安装 Bitwarden</h3><p>首先，到 Bitwarden 网站<a href="https://bitwarden.com/host/">传送门</a>并提供您的电子邮件地址，获得安装 ID 和密钥。记下它们，因为您稍后在安装过程中需要它们。</p><p>1、使用以下命令下载 Bitwarden 安装脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -Lso bitwarden.sh https:&#x2F;&#x2F;go.btwrdn.co&#x2F;bw-sh &amp;&amp; chmod 700 bitwarden.sh</span><br></pre></td></tr></table></figure><p>2、运行安装程序脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;bitwarden.sh install</span><br></pre></td></tr></table></figure><p>之后进行安装选项：</p><ul><li>Enter the domain name for your Bitwarden instance</li></ul><p>（输入你要给 Bitwarden 分配的<a href="https://www.iplaysoft.com/go/domain">域名</a>，这里例子为  bitwarden.example.com）</p><ul><li>Do you want to use Let’s Encrypt to generate a free SSL certificate? (y/n): n</li></ul><p>（是否使用 Let’s Encrypt 自动生成免费的 SSL 证书）</p><ul><li>Enter the database name for your Bitwarden instance</li></ul><p>（输入用于 Bitwarden 的数据库名称）</p><ul><li>Enter your installation id</li></ul><p>（输入<a href="https://bitwarden.com/host">https://bitwarden.com/host</a>上生成的安装 ID）</p><ul><li>Enter your installation key</li></ul><p>（输入<a href="https://bitwarden.com/host%E4%B8%8A%E7%94%9F%E6%88%90%E7%9A%84%E5%AE%89%E8%A3%85key">https://bitwarden.com/host上生成的安装key</a>)</p><ul><li>Do you have a SSL certificate to use?</li></ul><p>（如果您已经拥有自己的 SSL 证书，选择y需要将证书放置在<code>./bwdata/ssl/your.domain</code>目录中）</p><ul><li>Do you want to generate a self-signed SSL certificate?</li></ul><p>（选择y让 Bitwarden 为您生成自签名证书)</p><p>启动 Bitwarden 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;bitwarden.sh start</span><br></pre></td></tr></table></figure><p>首次启动 Bitwarden 可能时间会比较长，因为安装脚本要从 Docker Hub 下载全部需要的组件的镜像，比如 MySQL 体积就比较大，耐心等待完成即可。之后，可以使用 <code>docker ps</code> 命令来查看是否有 Bitwarden 的进程。</p><p>到此，我们已经成功安装好了 bitwarden</p><h3 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h3><p>修改配置前需停止bitwarden</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;bitwarden.sh stop</span><br></pre></td></tr></table></figure><h4 id="修改安装配置文件-端口号、SSL-证书等-："><a href="#修改安装配置文件-端口号、SSL-证书等-：" class="headerlink" title="修改安装配置文件 (端口号、SSL 证书等)："></a>修改安装配置文件 (端口号、SSL 证书等)：</h4><ul><li><p>如果你需要使用自己的 SSL 证书、修改默认的端口号等需求，可以编辑配置文件 <code>./bwdata/config.yml</code>。比如你的服务器本身就有网站占用了 80、443 端口，那么可以修改配置里的 http_port 和 https_port 端口号来避免冲突。</p></li><li><p>如果你使用宝塔面板，或者懂得修改 Nginx 的配置，也可以对你的 bitwarden 服务进行“反代”</p></li><li><p>修改完后，必须执行一下 <code>./bitwarden.sh rebuild</code> 命令才能让新配置生效</p></li></ul><h4 id="修改环境配置文件："><a href="#修改环境配置文件：" class="headerlink" title="修改环境配置文件："></a>修改环境配置文件：</h4><ul><li>环境配置文件 <code>./bwdata/env/global.override.env</code> 里还有诸如 SMTP、启用 Yubico、启用系统管理员门户、是否禁止用户注册等设置。</li><li>其中，如果你的 Bitwarden 打算是私人使用，建议在注册完自己账号之后，改成 “禁止用户注册”，对应的项为：<code>globalSettings__disableUserRegistration=true</code></li></ul><p>完成配置修改步骤后，启动您的 Bitwarden</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;bitwarden.sh restart</span><br></pre></td></tr></table></figure><p>至此官方版搭建bitwarden教程结束</p>]]></content>
      
      
      
        <tags>
            
            <tag> 官方版bitwarden </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bitwarden密码管理器搭建教程一：docker安装第三方Rust版vaultwarden</title>
      <link href="/posts/9f454c66.html"/>
      <url>/posts/9f454c66.html</url>
      
        <content type="html"><![CDATA[<p><strong>Bitwarden</strong>是一款自由且开源的密码管理服务，用户可在加密的保管库中存储敏感信息（例如网站登录凭据）。Bitwarden平台提供有多种客户端应用程序，包括网页用户界面、桌面应用，浏览器扩展、移动应用以及命令行界面。Bitwarden提供云端托管服务，并支持自行部署解决方案。</p><p>本篇教程包含群晖docker和服务器宝塔面板docker搭建教程</p><p>第三方Rust版作者地址：<a href="https://github.com/dani-garcia/vaultwarden">传送门</a></p><h3 id="一、群晖Docker教程"><a href="#一、群晖Docker教程" class="headerlink" title="一、群晖Docker教程"></a>一、群晖Docker教程</h3><p>1.1、在群晖套件中心里安装docker</p><img src="../images/未命名1644743970.png" alt="未命名1644743970" style="zoom:38%;" /><p>1.2、打开docker在注册表里搜索“vaultwarden”双击下载镜像</p><img src="../images/未命名1644744532.png" alt="未命名1644744532" style="zoom:38%;" /><p>1.3、在File Station里docker文件夹里新建文件夹bitwarden，然后在bitwarden文件夹里新建文件夹data</p><img src="../images/未命名1644808125.png" alt="未命名1644808125" style="zoom:38%;" /><p>1.4、在docker-映像里双击下载的vaultwarden镜像开始部署</p><img src="../images/未命名1644808278.png" alt="未命名1644808278" style="zoom:38%;" /><p>1.5、选择高级设置，勾选“启用自动重新启动”。存储空间里添加文件夹选择刚刚新建的data文件夹，装载路径填/data/。端口设置里删除第一个端口，第二个本地端口改成和群晖没有冲突的其他端口。然后点应用，下一步开始部署</p><img src="../images/未命名1644808589.png" alt="未命名1644808589" style="zoom:38%;" /><img src="../images/未命名1644808856.png" alt="未命名1644808856" style="zoom:38%;" /><p>1.6、部署完成后，即可在docker容器里看到vaultwarden服务了。用群晖地址加端口号即可打开bitwarden首页，创建管理员账号</p><img src="../images/未命名1644809678.png" alt="未命名1644809678" style="zoom:38%;" /><p>1.7、创建完账号，如需禁用新用户注册、禁用邀请、配置邮箱等信息，在doceker容量先停止服务，点编辑–环境里–新增如下参数。更多的配置请参考作者的Wiki：<a href="https://github.com/dani-garcia/vaultwarden/wiki">传送门</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SIGNUPS_ALLOWED&#x3D;false</span><br><span class="line">INVITATIONS_ALLOWED&#x3D;false</span><br><span class="line">SMTP_HOST&#x3D;smtp.domain.tld</span><br><span class="line">SMTP_FROM&#x3D;vaultwarden@domain.tld</span><br><span class="line">SMTP_PORT&#x3D;587</span><br><span class="line">SMTP_SSL&#x3D;true</span><br><span class="line">SMTP_USERNAME&#x3D;username</span><br><span class="line">SMTP_PASSWORD&#x3D;password</span><br></pre></td></tr></table></figure><img src="../images/未命名1644810450.png" alt="未命名1644810450" style="zoom:38%;" /><p>1.8、问题：创建的账号的时候，点击没有反应。这是因为bitwarden要求必须开启ssl，可以利用群晖的反向代理配置ssl证书</p><p>方法：首先需给自己的域名申请一个证书，在群晖控制面板–安全性–证书，添加自己的域名ssl证书，设置成默认证书</p><img src="../images/未命名1644811097.png" alt="未命名1644811097" style="zoom:38%;" /><p>在控制面板–登录门户–高级–反向代理服务器，新增反向代理服务器规则。配置如下：</p><img src="../images/未命名1644811560.png" alt="未命名1644811560" style="zoom:38%;" /><p>至此，群晖部署教程结束</p><h3 id="二、宝塔面板docker教程"><a href="#二、宝塔面板docker教程" class="headerlink" title="二、宝塔面板docker教程"></a>二、宝塔面板docker教程</h3><p>准备工具：域名一个、服务器一台</p><p>域名解析到服务器。宝塔面板的安装方法，这里不再赘述。各个系统的安装方法，请移至官方：<a href="https://www.bt.cn/download/linux.html">传送门</a>。在软件商店里安装nginx和docker</p><img src="../images/未命名1644818879.png" alt="未命名1644818879" style="zoom:38%;" /><p>点设置打开docker，镜像管理–镜像搜索–搜索vaultwarden–选择第一个就是我们要的镜像–拉取</p><img src="../images/未命名1644818757.png" alt="未命名1644818757" style="zoom:38%;" /><p>宝塔面板网站里添加一个站点，在站点里新建一个data文件夹</p><img src="../images/未命名1644819360.png" alt="未命名1644819360" style="zoom:38%;" /><img src="../images/未命名1644819612.png" alt="未命名1644819612" style="zoom: 50%;" /><img src="../images/未命名1644819582.png" alt="未命名1644819582" style="zoom:38%;" /><p>docker管理器创建vaultwarden容器，配置端口映射、目录映射、内存配额等如下：</p><img src="../images/未命名1644823069.png" alt="未命名1644823069" style="zoom:38%;" /><p>在站点设置里配置域名ssl和反向代理</p><img src="../images/未命名1644820467.png" alt="未命名1644820467" style="zoom:38%;" /><p>打开域名就是bitwarden的首页了，创建管理员账号。这里禁用新用户注册、禁用要求、配置邮箱需要用在终端里用命令操作，如关闭新用户注册，使用下面的命令。使用之前需要在宝塔面板docker管理器中删除掉之前的容器，然后运行以下命令来重新创建容器并开启禁止用户注册的功能。不必担心，因为指定了 volume 映射，你的数据不会被删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name bitwarden \</span><br><span class="line">  -e SIGNUPS_ALLOWED&#x3D;false \</span><br><span class="line">  -v &#x2F;www&#x2F;wwwroot&#x2F;abc.com&#x2F;data&#x2F;:&#x2F;data&#x2F; \</span><br><span class="line">  -p 8989:80 \</span><br><span class="line">  vaultwarden&#x2F;server:latest</span><br></pre></td></tr></table></figure><p>其他配置移至作者wiki里查看更多配置命令：<a href="https://github.com/dani-garcia/vaultwarden/wiki">传送门</a></p><p>至此宝塔面板docker部署bitwarden教程结束</p>]]></content>
      
      
      
        <tags>
            
            <tag> bitwarden </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>只需几步轻松云编译openwrt</title>
      <link href="/posts/a02e4232.html"/>
      <url>/posts/a02e4232.html</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>Github Ac­tions 是 Mi­crosoft 收购 GitHub 后推出的 CI/CD 服务，它提供了性能配置非常不错的虚拟服务器环境（E5 2vCPU/7G RAM），基于它可以进行构建、测试、打包、部署项目。<span id="more"></span>对于公开仓库可免费无时间限制的使用，且单次使用时间长达 6 个小时，这对于编译 Open­Wrt 来说是非常充足的。不过 GitHub Ac­tions 有一定的使用门槛，首先要了解如何编写 workflow 文件。不过不用担心，博主已经编写好了相关的 work­flow 文件模版，只需要按照教程的步骤来操作即可。</p><h4 id="方案特点"><a href="#方案特点" class="headerlink" title="方案特点"></a>方案特点</h4><ul><li>免费</li><li>一键快速编译</li><li>定时自动编译</li><li>客制化编译</li><li>并发编译（可同时进行20个编译任务）</li><li>无需搭建编译环境（在线<code>make menuconfig</code>生成配置文件)</li><li>无需消耗自己的计算机与服务器的计算资源（性感E5在线编译）</li><li>无需担心磁盘空间不足（近60G磁盘空间）</li><li>无需使用清理文件（内核更新不怕 boom ）</li><li>编译速度快（编译时间1-2小时）</li><li>编译成功率提升200%（万兆自由网络环境）</li><li>全新环境（杜绝编译环境不干净导致编译失败）</li></ul><blockquote><p>本解决方案是一个开放平台，任何人都可以基于此打造自己专属的编译方案。</p></blockquote><h4 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h4><p><a href="https://github.com/P3TERX/Actions-OpenWrt">https://github.com/P3TERX/Actions-OpenWrt</a></p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li><a href="https://github.com/">GitHub</a> 账号</li></ul><h4 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h4><p>首先你必须要熟悉整个 Open­Wrt 的编译过程，这会让你非常容易的理解如何使用 GitHub Ac­tions 进行编译，即使你没有成功过。因为实际上本地编译近 90% 失败的原因是因为网络问题导致的，中国大陆特色，咱也不敢多说。GitHub Ac­tions 服务器由 Mi­crosoft Azure 提供，拥有万兆带宽，可以使编译成功率大大提升。</p><ul><li>在自己搭建编译环境中使用 <a href="https://github.com/coolsnowwolf/lede">Lean’s OpenWrt</a> 源码生成<code>.config</code>文件。（或使用直接 SSH 连接到 Actions 进行操作，后面有说明。）</li><li>进入 <a href="https://github.com/P3TERX/Actions-OpenWrt">P3TERX/Actions-OpenWrt</a> 项目页面，点击页面中的 <strong>Use this template</strong>（使用这个模版）按钮。</li></ul><img src="/images/20200201183633.png" style="zoom: 80%;" /><ul><li>填写仓库名称，然后点击<code>Create repository from template</code>（从模版创建储存库）按钮。</li></ul><img src="/images/20200201183634.png" style="zoom:80%;" /><ul><li>经过几秒钟的等待，页面会跳转到新建的仓库，内容和我的项目是相同的，然后点击diy-part1.sh</li></ul><p><img src="/images/20210328140335.png"></p><ul><li>点击右侧的编辑按钮，去掉第14行前面的注释#号</li></ul><p><img src="/images/20210328140542.png"></p><ul><li>翻到页面最下方，点击<code>Commit changes</code>（提交新文件）按钮。</li></ul><p><img src="/images/20210328141034.png"></p><ul><li>在 Actions 页面选择<code>Build OpenWrt</code>，然后点击<code>Run Workflow</code>按钮，SSH 连接需把<code>SSH connection to Actions</code>的值改为<code>true</code>。即可开始编译</li></ul><p><img src="/images/20201011212837.png"></p><ul><li>在 Actions 日志页面等待执行到<code>SSH connection to Actions</code>步骤，会出现下面的信息，点击url链接</li></ul><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210328141810.png"></p><ul><li><p>在浏览器中打开使用网页终端。（网页终端可能会遇到黑屏的情况，按 <code>Ctrl</code>+<code>C</code> 即可）然后输入下面代码回车</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd openwrt &amp;&amp; make menuconfig</span><br></pre></td></tr></table></figure></li><li><p>然后就出现了熟悉的菜单页面</p></li><li><p>完成后按<code>Ctrl</code>+<code>D</code>组合键或执行<code>exit</code>命令退出，后续编译工作将自动进行。</p></li><li><p>最后经过一两个小时的等待，不出意外你就可以在 Actions 页面看到已经打包好的固件目录压缩包。</p></li></ul><p><img src="/images/20200201183636.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 云编译 </tag>
            
            <tag> openwrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手动搭建Xray终极应用,全协议（Trojan,VLESS,Vmess）同时连接</title>
      <link href="/posts/92044635.html"/>
      <url>/posts/92044635.html</url>
      
        <content type="html"><![CDATA[<p>手动搭建xray终极应用，全协议（Trojan,VLESS,Vmess）同时连接，小白教程几分钟搞定。<span id="more"></span></p><h4 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h4><p>1、VPS 一台，重置好主流的操作系统</p><p>2、域名一个，解析到该VPS。</p><h4 id="Xray开始搭建"><a href="#Xray开始搭建" class="headerlink" title="Xray开始搭建"></a>Xray开始搭建</h4><h5 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h5><p>CentOS 需要安装开源发行软件包版本库，命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><p>Debian更新系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update -y</span><br></pre></td></tr></table></figure><h5 id="域名证书申请"><a href="#域名证书申请" class="headerlink" title="域名证书申请"></a>域名证书申请</h5><p>安装依赖，debian或ubuntu执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y socat curl</span><br></pre></td></tr></table></figure><p>centos执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y socat curl</span><br></pre></td></tr></table></figure><p>安装acme.sh脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  https:&#x2F;&#x2F;get.acme.sh | sh -s email&#x3D;my@example.com</span><br></pre></td></tr></table></figure><p>出现：Install success!表示安装成功</p><p>用acme.sh脚本申请证书</p><p>开始签发证书,注意请将example.com替换成你的域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --issue -d example.com   --standalone</span><br></pre></td></tr></table></figure><p>安装了nginx用下面命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue  -d example.com   --nginx</span><br></pre></td></tr></table></figure><p>复制/安装证书，注意请将example.com替换成你的域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --installcert -d example.com --fullchainpath &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;example.com.crt --keypath &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;example.com.key</span><br></pre></td></tr></table></figure><p>自动升级acme.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade --auto-upgrade</span><br></pre></td></tr></table></figure><h5 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h5><p>CentOS命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx -y</span><br></pre></td></tr></table></figure><p>Debian命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install nginx -y</span><br></pre></td></tr></table></figure><p>启动 Nginx服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><p>现在可以在浏览器中输入你的域名，看看是否可以访问到 Nginx 的欢迎页面</p><h5 id="安装官方Xray服务"><a href="#安装官方Xray服务" class="headerlink" title="安装官方Xray服务"></a>安装官方Xray服务</h5><p>以下一键安装程序来源于官方</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &quot;$(curl -L https:&#x2F;&#x2F;github.com&#x2F;XTLS&#x2F;Xray-install&#x2F;raw&#x2F;main&#x2F;install-release.sh)&quot; @ install -u root</span><br></pre></td></tr></table></figure><p>UUID 随机生成代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;uuid  #uuid复制粘贴到记事本里下面配置需要用到</span><br></pre></td></tr></table></figure><p>安装完毕以后，在VPS目录 /usr/local/etc/xray 找到 config,json 文件，贴入下面的配置文件，注意修改一些提示的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;log&quot;: &#123;</span><br><span class="line">        &quot;loglevel&quot;: &quot;warning&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;inbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;port&quot;: 443,</span><br><span class="line">            &quot;protocol&quot;: &quot;vless&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;clients&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;id&quot;: &quot;&quot;, &#x2F;&#x2F; 填写你的 UUID</span><br><span class="line">                        &quot;flow&quot;: &quot;xtls-rprx-direct&quot;,</span><br><span class="line">                        &quot;level&quot;: 0,</span><br><span class="line">                        &quot;email&quot;: &quot;love@example.com&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;decryption&quot;: &quot;none&quot;,</span><br><span class="line">                &quot;fallbacks&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;dest&quot;: 1310, &#x2F;&#x2F; 默认回落到 Xray 的 Trojan 协议</span><br><span class="line">                        &quot;xver&quot;: 1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;path&quot;: &quot;&#x2F;websocket&quot;, &#x2F;&#x2F; 必须换成自定义的 PATH</span><br><span class="line">                        &quot;dest&quot;: 1234,</span><br><span class="line">                        &quot;xver&quot;: 1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;path&quot;: &quot;&#x2F;vmesstcp&quot;, &#x2F;&#x2F; 必须换成自定义的 PATH</span><br><span class="line">                        &quot;dest&quot;: 2345,</span><br><span class="line">                        &quot;xver&quot;: 1</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;path&quot;: &quot;&#x2F;vmessws&quot;, &#x2F;&#x2F; 必须换成自定义的 PATH</span><br><span class="line">                        &quot;dest&quot;: 3456,</span><br><span class="line">                        &quot;xver&quot;: 1</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;streamSettings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;tcp&quot;,</span><br><span class="line">                &quot;security&quot;: &quot;xtls&quot;,</span><br><span class="line">                &quot;xtlsSettings&quot;: &#123;</span><br><span class="line">                    &quot;alpn&quot;: [</span><br><span class="line">                        &quot;http&#x2F;1.1&quot;</span><br><span class="line">                    ],</span><br><span class="line">                    &quot;certificates&quot;: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            &quot;certificateFile&quot;: &quot;&#x2F;path&#x2F;to&#x2F;fullchain.crt&quot;, &#x2F;&#x2F; 换成你的证书，绝对路径</span><br><span class="line">                            &quot;keyFile&quot;: &quot;&#x2F;path&#x2F;to&#x2F;private.key&quot; &#x2F;&#x2F; 换成你的私钥，绝对路径</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;port&quot;: 1310,</span><br><span class="line">            &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">            &quot;protocol&quot;: &quot;trojan&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;clients&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;password&quot;: &quot;&quot;, &#x2F;&#x2F; 填写你的密码</span><br><span class="line">                        &quot;level&quot;: 0,</span><br><span class="line">                        &quot;email&quot;: &quot;love@example.com&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;fallbacks&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;dest&quot;: 80 &#x2F;&#x2F; 或者回落到其它也防探测的代理</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;streamSettings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;tcp&quot;,</span><br><span class="line">                &quot;security&quot;: &quot;none&quot;,</span><br><span class="line">                &quot;tcpSettings&quot;: &#123;</span><br><span class="line">                    &quot;acceptProxyProtocol&quot;: true</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;port&quot;: 1234,</span><br><span class="line">            &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">            &quot;protocol&quot;: &quot;vless&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;clients&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;id&quot;: &quot;&quot;, &#x2F;&#x2F; 填写你的 UUID</span><br><span class="line">                        &quot;level&quot;: 0,</span><br><span class="line">                        &quot;email&quot;: &quot;love@example.com&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;decryption&quot;: &quot;none&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;streamSettings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;ws&quot;,</span><br><span class="line">                &quot;security&quot;: &quot;none&quot;,</span><br><span class="line">                &quot;wsSettings&quot;: &#123;</span><br><span class="line">                    &quot;acceptProxyProtocol&quot;: true, &#x2F;&#x2F; 提醒：若你用 Nginx&#x2F;Caddy 等反代 WS，需要删掉这行</span><br><span class="line">                    &quot;path&quot;: &quot;&#x2F;websocket&quot; &#x2F;&#x2F; 必须换成自定义的 PATH，需要和分流的一致</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;port&quot;: 2345,</span><br><span class="line">            &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">            &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;clients&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;id&quot;: &quot;&quot;, &#x2F;&#x2F; 填写你的 UUID</span><br><span class="line">                        &quot;level&quot;: 0,</span><br><span class="line">                        &quot;email&quot;: &quot;love@example.com&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;streamSettings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;tcp&quot;,</span><br><span class="line">                &quot;security&quot;: &quot;none&quot;,</span><br><span class="line">                &quot;tcpSettings&quot;: &#123;</span><br><span class="line">                    &quot;acceptProxyProtocol&quot;: true,</span><br><span class="line">                    &quot;header&quot;: &#123;</span><br><span class="line">                        &quot;type&quot;: &quot;http&quot;,</span><br><span class="line">                        &quot;request&quot;: &#123;</span><br><span class="line">                            &quot;path&quot;: [</span><br><span class="line">                                &quot;&#x2F;vmesstcp&quot; &#x2F;&#x2F; 必须换成自定义的 PATH，需要和分流的一致</span><br><span class="line">                            ]</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;port&quot;: 3456,</span><br><span class="line">            &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">            &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;clients&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;id&quot;: &quot;&quot;, &#x2F;&#x2F; 填写你的 UUID</span><br><span class="line">                        &quot;level&quot;: 0,</span><br><span class="line">                        &quot;email&quot;: &quot;love@example.com&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;streamSettings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;ws&quot;,</span><br><span class="line">                &quot;security&quot;: &quot;none&quot;,</span><br><span class="line">                &quot;wsSettings&quot;: &#123;</span><br><span class="line">                    &quot;acceptProxyProtocol&quot;: true, &#x2F;&#x2F; 提醒：若你用 Nginx&#x2F;Caddy 等反代 WS，需要删掉这行</span><br><span class="line">                    &quot;path&quot;: &quot;&#x2F;vmessws&quot; &#x2F;&#x2F; 必须换成自定义的 PATH，需要和分流的一致</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;outbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;protocol&quot;: &quot;freedom&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="修改-Nginx-配置文件"><a href="#修改-Nginx-配置文件" class="headerlink" title="修改 Nginx 配置文件"></a>修改 Nginx 配置文件</h5><p>找到VPS目录 etc/nginx/nginx.conf 文件，修改如以下配置，注意example.com修改成你的域名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">user  root;</span><br><span class="line">worker_processes  1;</span><br><span class="line">#error_log  &#x2F;etc&#x2F;nginx&#x2F;error.log warn;</span><br><span class="line">#pid    &#x2F;var&#x2F;run&#x2F;nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       &#x2F;etc&#x2F;nginx&#x2F;mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line">    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line">                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line">                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line">    #access_log  &#x2F;etc&#x2F;nginx&#x2F;access.log  main;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line">    keepalive_timeout  120;</span><br><span class="line">    client_max_body_size 20m;</span><br><span class="line">    #gzip  on;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 127.0.0.1:80;</span><br><span class="line">    server_name  example.com;</span><br><span class="line">    root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class="line">    index index.php index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       0.0.0.0:80;</span><br><span class="line">    server_name  example.com;</span><br><span class="line">    return 301 https:&#x2F;&#x2F;example.com$request_uri;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置 Nginx 开机启动，并重新启动 Nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx   #设置nginx开机启动</span><br><span class="line">systemctl restart nginx  #重启nginx</span><br><span class="line">systemctl status nginx   #查看nginx运行状态</span><br></pre></td></tr></table></figure><p>检验Xray配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart xray  #重启xray服务</span><br><span class="line">systemctl status xray  #查看xray运行状态</span><br></pre></td></tr></table></figure><h5 id="网站及部署"><a href="#网站及部署" class="headerlink" title="网站及部署"></a>网站及部署</h5><p>默认的网站主程序文件夹在 /usr/share/nginx/html/ ，大家可以自行的替换里面的任何东西（整站程序）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;*   #删除默认文件</span><br></pre></td></tr></table></figure><p>下载网站模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;web.zip --no-check-certificate https:&#x2F;&#x2F;templated.co&#x2F;broadcast&#x2F;download</span><br></pre></td></tr></table></figure><p>cd到html文件夹下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;</span><br></pre></td></tr></table></figure><p>解压下载的web.zip压缩包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip web.zip</span><br></pre></td></tr></table></figure><p>BBR加速</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate &quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;chiakge&#x2F;Linux-NetSpeed&#x2F;master&#x2F;tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; .&#x2F;tcp.sh</span><br></pre></td></tr></table></figure><p>至此，搭建全部完成</p>]]></content>
      
      
      
        <tags>
            
            <tag> Xray </tag>
            
            <tag> vless </tag>
            
            <tag> xtls </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑群晖6.2.3如何启用核显硬解</title>
      <link href="/posts/52b1112f.html"/>
      <url>/posts/52b1112f.html</url>
      
        <content type="html"><![CDATA[<p>前言：黑群晖升级到6.2.3后默认不加载核显驱动的，下面介绍怎么开启核显<span id="more"></span></p><p>准备工具：</p><p>DS918+引导</p><p>驱动包extra.lzma和extra2.lzma</p><p>osfmount工具</p><p>这里打包了供大家<a href="https://cloud.189.cn/t/3uqe6vNzE3Ez">下载</a></p><p>1、打开osfmount工具，选择mount new  选择引导文件</p><img src="/images/20210324123158.png" style="zoom: 50%;" /><p>选择中间的30MB分区</p><img src="/images/20210324123415.png" style="zoom:50%;" /><p>取消read-only drive 只读</p><img src="/images/20210324123701.png" style="zoom:50%;" /><p>双击下图所示区域</p><img src="/images/20210324123859.png" style="zoom:50%;" /><p>把里面的extra.lzma和extra2.lzma删除掉，替换我给大家的准备的extra.lzma和extra2.lzma驱动</p><p><img src="/images/20210324124153.png"></p><p>点Dismount退出分区，至此引导的驱动包替换完成，然后重新写入U盘即可。</p><p><img src="/images/20210324124324.png"></p><p>群晖开启ssh用putty登陆输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la &#x2F;dev&#x2F;dri</span><br></pre></td></tr></table></figure><p>显示下图即是核显开启成功</p><p><img src="/images/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210323131459.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 群晖 </tag>
            
            <tag> 核显硬解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打造高性能群晖NAS,H310+i58600T</title>
      <link href="/posts/d1512b84.html"/>
      <url>/posts/d1512b84.html</url>
      
        <content type="html"><![CDATA[<p>前言：刚开始接触群晖nas是19年上的蜗牛的车，当时买的C款J1900的配置。买回来换了益衡电源和静音风扇，稳定运行到今年，发现性能跟不上了，于是萌生了升级配置了念头。在黄鱼上无意间看到了暴风二期j3455主板，果断买回来了。<span id="more"></span>之前蜗牛装的是3617xs半洗白，现在想尝试一下918+毕竟可以硬解，但是这款主板装918+有非常多的问题，折腾了好久还是换成了3617xs。但是心有不甘还是想追求完美。于是秉着三五年不用升级，全部用全新的打造一个高性能的群晖nas</p><p>上配件价格一览表</p><h5 id="CPU-i5-8600T-—-823元（全新散片）"><a href="#CPU-i5-8600T-—-823元（全新散片）" class="headerlink" title="CPU: i5-8600T —- 823元（全新散片）"></a>CPU: i5-8600T —- 823元（全新散片）</h5><p><img src="/images/20210319131704.png"></p><h5 id="主板：华擎H310-ITX-—-569元（全新京东自营）"><a href="#主板：华擎H310-ITX-—-569元（全新京东自营）" class="headerlink" title="主板：华擎H310 ITX —- 569元（全新京东自营）"></a>主板：华擎H310 ITX —- 569元（全新京东自营）</h5><p><img src="/images/20210319132949.png"></p><h5 id="电源：益衡7025B-—-255元（全新）"><a href="#电源：益衡7025B-—-255元（全新）" class="headerlink" title="电源：益衡7025B —- 255元（全新）"></a>电源：益衡7025B —- 255元（全新）</h5><p><img src="/images/20210319133546.png"></p><h5 id="机箱：万由410-—-666元（全新不含电源）"><a href="#机箱：万由410-—-666元（全新不含电源）" class="headerlink" title="机箱：万由410 —- 666元（全新不含电源）"></a>机箱：万由410 —- 666元（全新不含电源）</h5><p><img src="/images/20210319133837.png"></p><h5 id="cpu风扇：ID-COOLING-IS-30-—-84元（全新）"><a href="#cpu风扇：ID-COOLING-IS-30-—-84元（全新）" class="headerlink" title="cpu风扇：ID COOLING IS 30 —- 84元（全新）"></a>cpu风扇：ID COOLING IS 30 —- 84元（全新）</h5><p><img src="/images/20210319134316.png"></p><h5 id="内存条：酷兽DDR4-8G-2666-—-199元（全新）"><a href="#内存条：酷兽DDR4-8G-2666-—-199元（全新）" class="headerlink" title="内存条：酷兽DDR4 8G 2666 —- 199元（全新）"></a>内存条：酷兽DDR4 8G 2666 —- 199元（全新）</h5><p><img src="/images/20210319134651.png"></p><h5 id="总价格：2596元"><a href="#总价格：2596元" class="headerlink" title="总价格：2596元"></a>总价格：2596元</h5><p>以上是配件和价格明细，下面就是装机了，装机很简单就不多介绍了，主要是理线，装机5分钟理线一小时，主要是把cpu风扇前面的空间让出来。</p><h4 id="下面开始装群晖系统"><a href="#下面开始装群晖系统" class="headerlink" title="下面开始装群晖系统"></a>下面开始装群晖系统</h4><p>需要用到的工具：</p><p>diskgenius分区工具</p><p>win32diskimager写盘工具</p><p>DS918+(1.04B)引导 原作者<a href="https://xpenology.com/forum/topic/12952-dsm-62-loader/">地址</a></p><p>上面引导装6.2.3版本无法开启硬解，需要替换驱动包extra.lzma和extra2.lzma附上原作者<a href="https://xpenology.com/forum/topic/28321-driver-extension-jun-103b104b-for-dsm623-for-918-3615xs-3617xs">地址</a></p><p>DS918+(6.2.3-25426)固件</p><p>U盘一个</p><p>U盘芯片检测工具ChipGenius</p><p>这里我打包了所需工具供大家<a href="https://cloud.189.cn/t/IRNzyafaiQru">下载</a>，引导已替换了驱动包可直接使用</p><h5 id="制作U盘引导"><a href="#制作U盘引导" class="headerlink" title="制作U盘引导"></a>制作U盘引导</h5><p>1.打开U盘芯片检测工具ChipGenius查看U盘的VID和PID</p><img src="/images/20210322133736.png" style="zoom: 33%;" /><p>2.打开DG分区工具选择磁盘—打开虚拟磁盘文件—选择引导文件</p><img src="/images/20210322134858.png" style="zoom: 33%;" /><p>3.选择ESP分区选择grub文件夹，选择grub.cfg文件右击复制到桌面</p><img src="/images/20210322135400.png" style="zoom:50%;" /><p>4.用记事本打开grub.cfg找到VID和PID替换U盘的VID和PID，需要洗白的这里把sn和mac也替换一下</p><img src="/images/20210322135700.png" style="zoom:50%;" /><p>5.回到DG分区工具右击空白处选择复制文件到当前分区，选择grub.cfg文件替换掉之前的grub.cfg文件</p><p>6.打开Win32DiskImager开始写入引导镜像</p><p>至此U盘引导制作完成</p><h4 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h4><p>在群晖官网下载 Synology Assistant 程序</p><p><img src="/images/52555214.png"></p><p>开机后只要在同一个局域网内，Synology Assistant 能扫描到所有的群晖设备</p><p><img src="/images/297364585.png"></p><p>点击 DSM 未安装的那台黑群晖，联机跳转到网页，注意在此页面一定要选择手动安装。U盘引导的黑群晖，系统是装在硬盘里的，所以至少准备一块硬盘，系统就是图中的 DSM_DS918+25426.pat ，目前最新的系统，很稳定。</p><p><img src="/images/7697813965.png"></p><p>提示硬盘里的数据都会被删除，打钩后点确定。</p><p><img src="/images/19854522.png"></p><p>接下来就是安静的等待安装了，可以去喝口水活动下脖子。然后就是设定服务器信息，名称随意，用户名我建议不要用 admin。</p><p>至此系统安装结束。我理想的黑群晖目前差不多也完成了，在 DSM7.0 到来之前，最新最稳定的 6.2.3 系统可以用很久了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> nas </tag>
            
            <tag> 群晖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最全的hexo搭建教程</title>
      <link href="/posts/6c3ccae4.html"/>
      <url>/posts/6c3ccae4.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。。<span id="more"></span><br>Hexo搭建步骤<br>    境搭建<br>    安装Hexo<br>    Hexo部署到github</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><h4 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h4><p>windows：到git官网上下载,<a href="https://git-scm.com/downloads">Download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p><h4 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h4><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p><p>windows：<a href="https://nodejs.org/en/download/">nodejs</a>选择LTS版本就行了。</p><p>安装完后，打开命令行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>检查一下有没有安装成功</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。</p><p>输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>依旧用<code>hexo -v</code>查看一下版本</p><p>至此就全部安装完了。</p><p>接下来初始化一下hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>这个blog可以自己取什么名字都行，然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog //进入这个blog文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>** _config.yml: 博客的配置文件**</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。</p><p>使用ctrl+c可以把服务关掉。</p><h3 id="Hexo部署到github"><a href="#Hexo部署到github" class="headerlink" title="Hexo部署到github"></a>Hexo部署到github</h3><h4 id="1-GitHub创建个人仓库"><a href="#1-GitHub创建个人仓库" class="headerlink" title="1. GitHub创建个人仓库"></a>1. GitHub创建个人仓库</h4><p>首先，你先要有一个GitHub账户，去注册一个吧。</p><p>注册完登录后，在GitHub.com中看到一个New repository，新建仓库</p><p>创建一个和你用户名相同的仓库，<a href="http://后面加.github.io/">后面加.github.io</a>，只有这样，将来要部署到GitHub page的时候，才会被识别，<a href="http://也就是xxxx.github.io/">也就是xxxx.github.io</a>，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。</p><p>点击create repository。</p><h4 id="2-生成SSH添加到GitHub"><a href="#2-生成SSH添加到GitHub" class="headerlink" title="2. 生成SSH添加到GitHub"></a>2. 生成SSH添加到GitHub</h4><p>回到你的git bash中，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p><p>可以用以下两条，检查一下你有没有输对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>然后创建SSH,一路回车</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。</p><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key<br>把你的id_rsa.pub里面的信息复制进去。在gitbash中，查看是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h4 id="3-将hexo部署到GitHub"><a href="#3-将hexo部署到GitHub" class="headerlink" title="3. 将hexo部署到GitHub"></a>3. 将hexo部署到GitHub</h4><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，修改为<br>YourgithubName就是你的GitHub账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;YourgithubName&#x2F;YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br> <code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br> <code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p><p>注意deploy时可能要你输入username和password。</p><p>过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了！！</p><h4 id="4-设置个人域名"><a href="#4-设置个人域名" class="headerlink" title="4.设置个人域名"></a>4.设置个人域名</h4><p>现在你的个人网站的地址是 yourname.github.io，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。</p><p>注册一个阿里云账户,在阿里云上买一个域名，我买的是 jarvistalk.cn，各个后缀的价格不太一样，比如最广泛的.com就比较贵，看个人喜好咯。</p><p>你需要先去进行实名认证,然后在域名控制台中，看到你购买的域名。</p><p>点解析进去，添加CNAME解析。</p><p>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名jarvistalk.cn</p><p>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。</p><p>最后，在gitbash中，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！</p><p>接下来你就可以正式开始写文章了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new papername</span><br></pre></td></tr></table></figure><p>然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>就可以看到更新了。</p><h3 id="配置部分"><a href="#配置部分" class="headerlink" title="配置部分"></a>配置部分</h3><h4 id="1-hexo基本配置"><a href="#1-hexo基本配置" class="headerlink" title="1.hexo基本配置"></a>1.hexo基本配置</h4><p>在文件根目录下的_config.yml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。</p><h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">网站标题</td></tr><tr><td align="center">subtitle</td><td align="center">网站副标题</td></tr><tr><td align="center">description</td><td align="center">网站描述</td></tr><tr><td align="center">author</td><td align="center">您的名字</td></tr><tr><td align="center">language</td><td align="center">网站使用的语言</td></tr><tr><td align="center">timezone</td><td align="center">网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</td></tr></tbody></table><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><p>翻到最下面，中间这些都默认就好了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">theme: landscape</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br></pre></td></tr></table></figure><p>theme就是选择什么主题，也就是在theme这个文件夹下，在官网上有很多个主题，默认给你安装的是lanscape这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在theme文件夹下，再修改这个参数就可以了。</p><h4 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2.更换主题"></a>2.更换主题</h4><p>如果你觉得默认的<code>landscape</code>主题不好看，那么可以在官网的主题中，选择你喜欢的一个主题进行修改就可以啦。<a href="https://hexo.io/themes/">点这里</a></p><p>这里有200多个主题可以选。不过最受欢迎的就是那么几个，比如<a href="https://github.com/theme-next/hexo-theme-next">NexT主题</a>，非常的简洁好看，大多数人都选择这个，关于这个的教程也比较多。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p>直接在github链接上下载下来，然后放到<code>theme</code>文件夹下就行了，然后再在刚才说的配置文件中把<code>theme</code>换成那个主题文件夹的名字，它就会自动在<code>theme</code>文件夹中搜索你配置的主题。</p><p>而后进入<code>next</code>这个文件夹，可以看到里面也有一个配置文件<code>_config.xml</code>，这个配置文件是修改你整个主题的配置文件。</p><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><h4 id="1-menu（菜单栏）"><a href="#1-menu（菜单栏）" class="headerlink" title="1.menu（菜单栏）"></a>1.menu（菜单栏）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  #home: 首页</span><br><span class="line">  #about: 关于</span><br><span class="line">  #tags: 标签</span><br><span class="line">  #categories: 分类</span><br><span class="line">  #archives: 归档</span><br><span class="line">  #schedule: 日程表</span><br><span class="line">  #sitemap: 站点地图</span><br><span class="line">  #commonweal: 公益404</span><br></pre></td></tr></table></figure><h4 id="2-创建“分类”选项"><a href="#2-创建“分类”选项" class="headerlink" title="2.创建“分类”选项"></a>2.创建“分类”选项</h4><p>生成“分类”页并添加tpye属性,进入博客目录。执行命令下方命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>categories文件夹下会有index.md这个文件，打开后默认内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2019-04-22 14:47:40</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加type: “categories”到内容中，添加后是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2019-04-24 15:30:30</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>给文章添加“categories”属性</p><p>打开需要添加分类的文章，为其添加categories属性。下方的categories:Hexo表示这篇文章添加到到“Hexo”这个分类。注意：一篇文章只会添加到一个分类中，如果是多个默认放到第一个分类中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo 添加分类及标签</span><br><span class="line">date: 2017-05-26 12:12:57</span><br><span class="line">categories: Hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。</p><h4 id="3-创建“标签”选项"><a href="#3-创建“标签”选项" class="headerlink" title="3. 创建“标签”选项"></a>3. 创建“标签”选项</h4><p>生成“标签”页并添加tpye属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>在tags文件夹下，找到index.md这个文件，打开后默认内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2019-04-22 14:22:08</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加type: “tags”到内容中，添加后是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2019-04-24 15:40:24</span><br><span class="line">type: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>给文章添加“tags”属性,打开需要添加标签的文章，为其添加tags属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo 添加分类及标签</span><br><span class="line">date: 2019-04-24 15:40:24</span><br><span class="line">categories: </span><br><span class="line">           - Hexo</span><br><span class="line">tags:</span><br><span class="line">           - 博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="4-添加搜索"><a href="#4-添加搜索" class="headerlink" title="4.添加搜索"></a>4.添加搜索</h4><p>安装Local Search插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure><p>在themes\next\ _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Local Search</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;hexo-generator-searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: true为开启false为关闭</span><br></pre></td></tr></table></figure><h4 id="5-设置圆形头像，点击旋转"><a href="#5-设置圆形头像，点击旋转" class="headerlink" title="5.设置圆形头像，点击旋转"></a>5.设置圆形头像，点击旋转</h4><p>把你的要加的头像修整好，最好是像素200×200的，复制粘贴到\themes\next\source\images文件下，图片名称为：avatar.gif</p><p>在themes\next\ _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: &#x2F;images&#x2F;avatar.gif</span><br><span class="line">  # If true, the avatar will be dispalyed in circle.</span><br><span class="line">  rounded: true</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure><h4 id="6-访问统计、阅读统计"><a href="#6-访问统计、阅读统计" class="headerlink" title="6.访问统计、阅读统计"></a>6.访问统计、阅读统计</h4><p>在themes\next\ _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true #false改为true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: far fa-eye</span><br></pre></td></tr></table></figure><h4 id="7-添加gitalk评论"><a href="#7-添加gitalk评论" class="headerlink" title="7.添加gitalk评论"></a>7.添加gitalk评论</h4><p>next已经集成gitalk评论</p><p>首先创建个OAuth Apps点<a href="https://github.com/settings/applications/new">这里</a></p><img src="/images/20210317150729.png" style="zoom:50%;" /><p>创建完有个Client ID和Client secrets下面会用到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: true #false改为true</span><br><span class="line">  github_id: github用户名</span><br><span class="line">  repo: 仓库名 yourname.github.io</span><br><span class="line">  client_id: 填写上面的Client ID</span><br><span class="line">  client_secret: 同理</span><br><span class="line">  admin_user: github用户名</span><br><span class="line">  distraction_free_mode: false</span><br><span class="line">  # When the official proxy is not available, you can change it to your own proxy address</span><br><span class="line">  proxy: https:&#x2F;&#x2F;cors-anywhere.herokuapp.com&#x2F;https:&#x2F;&#x2F;github.com&#x2F;login&#x2F;oauth&#x2F;access_token   # This is official proxy adress</span><br><span class="line">  # Gitalk&#39;s display language depends on user&#39;s browser or system environment</span><br><span class="line">  # If you want everyone visiting your site to see a uniform language, you can set a       force language value</span><br><span class="line">  # Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span><br><span class="line">  language: zh-CN</span><br></pre></td></tr></table></figure><p>保存三连，hexo c  hexo g  hexo d 首次需要初始化lssues</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
